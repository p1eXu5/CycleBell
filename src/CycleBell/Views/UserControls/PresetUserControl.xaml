<UserControl x:Class="CycleBell.Views.UserControls.PresetUserControl" 
             x:Name="TimePointsUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:CycleBell.Controls"
             xmlns:viewModels="clr-namespace:CycleBell.ViewModels"
             xmlns:dts="clr-namespace:CycleBell.DataTemplateSelectors"
             xmlns:userControls="clr-namespace:CycleBell.Views.UserControls"
             xmlns:at="clr-namespace:CycleBell.Views"
             xmlns:converters="clr-namespace:CycleBell.Converters"
             mc:Ignorable="d"

             d:DataContext="{d:DesignInstance viewModels:PresetViewModel}"

             d:DesignHeight="450" d:DesignWidth="480">

    <UserControl.Resources>
        
        <dts:TimePointVmDataTemplateSelector x:Key="templsel_Selector" />
        <BooleanToVisibilityConverter x:Key="conv_BooleanToVisibility" />

        <Storyboard x:Key="anim_OpacityOn">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:.4"/>
        </Storyboard>

        <Storyboard x:Key="anim_OpacityOff">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:.4"/>
        </Storyboard>

    </UserControl.Resources>

    <Grid x:Name="PresetGrid" HorizontalAlignment="Stretch" MinWidth="460">
        <Grid.RowDefinitions>
            <!-- start time -->
            <RowDefinition Height="auto"/>
            <!-- points list -->
            <RowDefinition Height="*"/>
            <!-- adding point -->
            <RowDefinition Height="90"/>
        </Grid.RowDefinitions>

        <!-- start time & upcoming time point -->
        <Grid Grid.Row="0" 
              TextElement.FontFamily="{StaticResource font_SuiGeneris}"
              SnapsToDevicePixels="True"
              Margin="10,18,10,18"
              >
            
            <!-- start time -->
            <StackPanel x:Name="sp_StartTime"
                        Opacity="1.0"
                        Orientation="Vertical"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center" 
                        >
                <StackPanel Orientation="Horizontal" Margin="0,0,0,2" HorizontalAlignment="Center">
                    <Button Height="25" Width="25" Margin="0,0,5,0" 
                            Command="{Binding SetStartTimeCommand}" 
                            CommandParameter="1">
                        +1
                    </Button>
                    <Button Height="25" Width="25"
                            Command="{Binding SetStartTimeCommand}" 
                            CommandParameter="5"
                            >
                        +5
                    </Button>
                </StackPanel>
                <controls:TimerBox x:Name="timer_Box" 
                                   TabIndex="2"
                                   at:AttachedPropertyFactory.IsFocused="{Binding FocusStartTime}"
                                   Text="{Binding StartTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                                  Converter={StaticResource conv_TimeSpanToString}}"
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Control}}"
                                   IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Control}}"
                                   Style="{StaticResource style_TimerBox}"
                                   />
                <TextBlock Text="start time" Style="{StaticResource style_UnderTimer}"
                           Height="{Binding ElementName=timer_Box, Path=ActualHeight}"
                           />

                <StackPanel.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.IsRunning, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="0.0" Duration="0:0:.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="1.0" Duration="0:0:.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
            
            <!-- upcoming time point -->
            <StackPanel x:Name="sp_Upcoming"
                        Opacity="0.0"
                        Orientation="Vertical"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center" 
                        TextElement.FontFamily="{StaticResource font_SuiGeneris}"
                        ZIndex="-1"
                        >
                <!-- TimeLeftTo -->
                <StackPanel Orientation="Horizontal" Width="Auto" HorizontalAlignment="Center">
                    <!-- sign -->
                    <ContentControl Width="6" 
                                    HorizontalAlignment="Right"
                                    Focusable="False"
                                    >
                        <TextBlock x:Name="tbk_Sign"  
                                   Style="{StaticResource style_TimerBlock}" 
                                   Text="-"
                                   />
                    </ContentControl>

                    <ContentControl Focusable="False">
                        <TextBlock x:Name="tbk_MajorH"
                                   Style="{StaticResource style_TimerBlock}"
                                   Text="{Binding TimeLeftTo.MajorH}"
                                    >

                        </TextBlock>
                    </ContentControl>

                    <ContentControl Width="16" Focusable="False">
                        <TextBlock x:Name="tbk_MinorH" 
                                   Style="{StaticResource style_TimerBlock}" 
                                   HorizontalAlignment="Left"
                                   Text="{Binding TimeLeftTo.MinorH}"
                        />
                    </ContentControl>

                    <ContentControl Width="8" Focusable="False">
                        <TextBlock Style="{StaticResource style_TimerBlock}"
                                   HorizontalAlignment="Center"
                                   Text=":"
                                   />
                    </ContentControl>

                    <ContentControl Width="15" Focusable="False">
                        <TextBlock x:Name="tbk_MajorM"  
                                   Style="{StaticResource style_TimerBlock}" 
                                   Text="{Binding TimeLeftTo.MajorM}"
                        />
                    </ContentControl>

                    <ContentControl Width="16" Focusable="False">
                        <TextBlock x:Name="tbk_MinorM"  
                                   Style="{StaticResource style_TimerBlock}"
                                   HorizontalAlignment="Left"
                                   Text="{Binding TimeLeftTo.MinorM }"
                        />
                    </ContentControl>

                    <ContentControl Width="8" Focusable="False">
                        <TextBlock Style="{StaticResource style_TimerBlock}"
                                   HorizontalAlignment="Center"
                                   Text=":"
                                   />
                    </ContentControl>

                    <ContentControl Width="15" Focusable="False">
                        <TextBlock x:Name="tbk_MajorS"  
                                   Style="{StaticResource style_TimerBlock}" 
                                   Text="{Binding TimeLeftTo.MajorS}"
                        />
                    </ContentControl>

                    <ContentControl Width="16" Focusable="False">
                        <TextBlock x:Name="tbk_MinorS"  
                                   Style="{StaticResource style_TimerBlock}" 
                                   Text="{Binding TimeLeftTo.MinorS}"
                                   HorizontalAlignment="Left"
                        />
                    </ContentControl>

                </StackPanel>
                <!-- next TimePoint name -->
                <TextBlock Style="{StaticResource style_UnderTimer}" 
                           Height="{Binding ElementName=timer_Block, Path=ActualHeight}"
                           >
                    <Run>now:</Run> 
                    <Run Foreground="{DynamicResource brush_TimePointName}"
                         FontSize="14"
                         Text="{Binding NextTimePointName}" 
                         />
                </TextBlock>

                <StackPanel.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.IsRunning, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="1.0" Duration="0:0:.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="0.0" Duration="0:0:.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
        </Grid>

        <!-- points list -->
        <Grid Grid.Row="1">
            <!-- TimePointVmCollection -->
            <ListBox x:Name="m_pointsList" 
                     ItemTemplateSelector="{StaticResource templsel_Selector}"
                     ItemsSource="{Binding TimePointVmCollection}"
                     ItemContainerStyle="{StaticResource style_ListBoxItem}"
                     FontFamily="{StaticResource font_SuiGeneris}"
                     ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                     ScrollViewer.CanContentScroll="False"
                     
                     at:AttachedPropertyFactory.IsTimePopints="{Binding HasTimePoints}"
                     >
                <!--<ToggleButton Width="200" Height="200" Style="{x:Null}" />-->
                <ListBox.Style>
                    <Style TargetType="ListBox">
                        <Setter Property="Opacity" Value="0.0" />
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="VerticalAlignment" Value="Stretch" />
                        <Setter Property="Margin" Value="20,0" />
                        <Setter Property="MinHeight" Value="110"></Setter>
                        <Setter Property="SelectionMode" Value="Single" />
                        <Style.Triggers>
                            <Trigger Property="at:AttachedPropertyFactory.IsTimePopints" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource anim_OpacityOn}" />
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource anim_OpacityOff}" />
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
            </ListBox>

            <!-- info table -->
            <StackPanel Orientation="Vertical" ZIndex="-1" x:Name="panel"
                        IsHitTestVisible="False">

                <TextBlock HorizontalAlignment="Center" Style="{x:Null}">
                    <LineBreak />
                    <Run Text="               "></Run><Bold>Preset is empty. To fill it you need:</Bold>
                    <LineBreak /><LineBreak />
                    <Run Text="    "></Run><Run>1. Set the Time in section bellow</Run>
                    <LineBreak />
                    <Run Text="    "></Run><Run>2. Push the "add" button on the right in same section</Run>
                    <LineBreak />
                </TextBlock>
                <TextBlock HorizontalAlignment="Center" Style="{x:Null}">
                    <LineBreak /><LineBreak />
                    <Bold>TimePoint creating section:</Bold>
                </TextBlock>
            </StackPanel>

        </Grid>

        <!-- adding point -->
        <userControls:AddingTimePointUserControl Grid.Row="2"
                                                 VerticalAlignment="Center"
                                                 HorizontalAlignment="Center"
                                                 MinWidth="400"
                                                 Height="Auto" Width="Auto" Margin="20,10,20,0"
                                                 DataContext="{Binding AddingTimePoint}">
            <userControls:AddingTimePointUserControl.Style>
                <Style TargetType="UserControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=DataContext.IsRunning,
                                                       RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" 
                                     Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </userControls:AddingTimePointUserControl.Style>
        </userControls:AddingTimePointUserControl>
        

    </Grid>
</UserControl>
